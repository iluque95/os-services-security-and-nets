Pràctica 1 - Sessió 3 - Configuració de les interfícies de xarxa Wi-Fi. (Luque Díaz, Itiel)


# PROGRAMARI NECESSARI
----------------------

* Gestor de textos
* Shell bash
* Comanda dig (apt-get install dnsutils)
* Comanda iw (apt-get install iw)
* Comandes iwlist, iwconfig (apt-get install wireless-tools)
* wpa_supplicant (apt-get install wpasupplicant)
* Drivers targeta inalàmbrica


# FITXERS RELACIONATS
---------------------

* /etc/network/interfaces						-->	Configuració de les interfícies
* /etc/hostname									-->	Nom de l'equip en la xarxa
* /etc/resolv.conf								-->	Servidors DNS i nom de la xarxa
* /etc/passwd									-->	Usuaris del sistema
* /etc/udev/rules.d/70-persistent-net.rules		--> Configuracions permanents de xarxa
* /etc/networks									--> Nom de les xarxes conegudes
* /etc/hosts									--> Hosts coneguts amb el seu dns
* /sys/class/net/<interfície>					--> Estadístiques de les intefícies


# DESCRIPCIÓ
------------

De vegades és necessari mantenir un recull d'informació sobre l'equip i la xarxa on
s'està treballant, per saber que està succeïnt en l'entorn i poder guarantir un correcte
funcionament d'aquesta.
Altres cops, potser, es vol detectar errors en aquells punts més crítics que amb un simple
script es poden fer en qüestió de pocs minuts.
En aquesta sessió s'aprendrà a realitzar un shell scripten bash on tractarà aquests temes,
cercant l'informació i recullint-la per a què l'administrador pugui analitzar-la i extreure
conclusions a partir dels resultats.


# ACTIVACIÓ/DESACTIVACIÓ D'INTERFÍCIES
--------------------------------------

Per mostrar les interfícies que están actives encara que no estiguin configurades
es pot fer amb la comanda:
	$ ip a

Si es vol aixer alguna en concret es pot fer amb:
	# ifup <nom de la interficie>

Inversament es pot desactivar amb:
	# ifdown <nom de la interficie>

Per a saber si aquesta està activa o no basta amb veure els paràmetres que té que
normalment no disposa dels paràmetres que ofereix el DHCP.

Es pot assegurar fent ping a la mateixa màquina amb aquesta interfície. Per exemple:
	$ ping -I <nom interficie> 127.0.0.1

Si la interfície no està activa, es queixarà amb un missatge de l'estil "La xarxa és
inabastable" normalment en anglès.


# REANOMENAMENT D'UNA INTERFÍCIE
--------------------------------

El sistema operatiu assigna un nom a cada interfície, antigament feia servir el nom
d'ethX on X començava per la que zero, però aquest mètode era un problema perquè no
hi havia una associació directa amb la targeta de xarxa física. Per aquest motiu es
va començar a vincular el tipus de targeta amb la seva mac i així donar un nom únic.

En aquest cas es diposa d'una interfície amb direcció mac 08:00:27:c0:3f:03 i amb nom
enp0s3 del tipus ethernet (RJ45).

És un nom dificil de recordar, per això, és útil poder assignar un nom propi.

Per poder saber els paràmetres, mac i nom d'interfície es fa amb la comanda:
	$ ip addr show

Un cop recollides les dades, s'ha d'afegir un nou fitxer de configuracions persistents
en /etc/udev/rules.d/ anomenat 70-persistent-net.rules on afegirem una regla com aquesta:

	# interface with MAC address "08:00:27:c0:3f:03" will be assigned "itiel0"
	SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:c0:3f:03", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="enp0s3", NAME="itiel0"

Es important indicar en la directiva KERNEL el nom amb que es reconeix i en NAME amb
el nom que vol veure a partir d'ara així com de quina interfície es tracta, per això,
s'indica la mac en ATTR{address}. La resta de paràmetres són per a configurar més d'una
en el cas de ATTR{dev_id} i el tipus, ethernet o wifi.

Per acabar de configurar-la amb el nou nom s'ha d'aclarir en el fitxer de les
interficies amb quien nom es veurà a partir d'ara per a què la pugui activar
de forma automàtica i es puguin relacionar els paràmetres a l'interfície:

Abans de modificar res:

	# The primary network interface
	auto enp0s3
	allow-hotplug enp0s3
	iface enp0s3 inet dhcp

Després de reanomenar l'interfície:

	# The primary network interface
	auto itiel0
	allow-hotplug itiel0
	iface itiel0 inet dhcp


# CONFIGURACIÓ DE LES INTERFÍCIES
---------------------------------

La configuració manual es fa sobre el fitxer /etc/network/interfaces on es poden
assignar interfícies automàtiques, és a dir, que demanin els paràmetres de xarxa
a un servidor DHCP o de manera estàtica on l'administrador introdueix cada un
amb els valors que vol.

Exemple configuració dinàmica:

	# This file describes the network interfaces available on your system
	# and how to activate them. For more information, see interfaces(5).

	source /etc/network/interfaces.d/*

	# The loopback network interface
	auto lo
	iface lo inet loopback

	# The primary network interface
	auto itiel0
	allow-hotplug itiel0
	iface itiel0 inet dhcp

Exemple configuració estàtica:

	# This file describes the network interfaces available on your system
	# and how to activate them. For more information, see interfaces(5).

	source /etc/network/interfaces.d/*

	# The loopback network interface
	auto lo
	iface lo inet loopback

	# The primary network interface
	auto itiel0
	allow-hotplug itiel0
	iface itiel0 inet static
			address 192.168.1.50
			netmask 255.255.255.0
			network 192.168.1.0
			gateway 192.168.1.1
			dns-nameservers 8.8.8.8

Per poder re-negociar una nova direcció ip i els nous paràmetres es fa
amb la comanda:
	# dhclient -v -r <nom interfície>

D'altra banda es pot configurar una interfície en viu, pot estar activa o desactivada
i se li pot assignar els paràmetres necessaris amb la comanda:
	# ip link set dev <interface> <parametre> <valor>

També:
	# ip addr add <ip dir with cidr> dev <interface>

Exemple:

	# ip link set dev itiel0 name eth0
	# ip link set dev itiel0 address 00:80:c8:f8:be:ef
	# ip link set dev itiel0 alias itiel_fisica
	# ip addr add 192.168.1.20/24 dev itiel0
	
	
Per acabar la configuració de l'interfície, és molt important saber si aquesta està bé,
ja que es podría deixar sense comunicació a la màquina que s'està fent canvis.

Amb la mateixa eina que s'activen les interfícies, amb uns paràmetres es pot veure
si tot està correcte:

	# sudo ifup --no-act <nom interfície>

Per exemple, en cas d'estar tot correcte es veuría una sortida semblant a aquesta:
	
	$ sudo ifup --no-act eth0
	ifup: interface eth0 already configured

I en el cas advers:

	$ sudo ifup --no-act eth0
	/etc/network/interfaces:11: unknown method
	ifup: couldn't read interfaces file "/etc/network/interfaces"


# CONÈIXER IP EXTERNA
---------------------

Existeixen diverses formes, com per exemple les que s'esmentaran a continuació:
	
	1. Fer un ping a una ip externa, p.ex. a google.
	2. Descarregar el recurs d'una pàgina web on indica l'ip pública del client mitjançant
	   un llenguatge de programació web. P.ex. PHP.
	3. Fent consultes DNS.

Per poder conèixer l'ip externa per a cada interfície s'ha de canviar la ruta
per defecte que té sortida a internet.

Mostrar rutes:

	$ ip route list

Esborra ruta per defecte:

	# ip route del default

Ruta que farà servir:

	# ip route add default via <gateway> dev <interface>

Exemple:

	# ip route add default via 192.168.1.1 dev eth1

Per forçar a que depenent de la xarxa tingui una sortida o una d'altre:
	
	# ip route add <network> via <gateway> dev <interface>

Exemple:

	# ip route add 192.168.10.0/24 via 192.168.1.1 dev eth0

A partir d'aquest moment les peticions a qualsevol ruta aniran per la eth1 excepte les
que van cap a la xarxa 192.168.10.0 que aniran per la interfície eth0


# RESOLUCIÓ DE NOMS
-------------------

Existeixen dues formes principalment de configurar i reconèixer hosts i xarxes. La primera
forma es configurar-ho de manera local on es pot indicar donat un host un dns i un àlies
en el fitxer /etc/hosts de manera que la primera columna representa l'ip de la màquina,
la segona el dns i l'última s'especifica un àlies.

Exemple:
	
	root@seax:~# cat /etc/hosts
	127.0.0.1	localhost
	127.0.1.1	seax.epsevg.upc.edu	seax

Per un altra banda, del mateix mode, es troba el fitxer /etc/networks on es poden assignar
les diferents xarxes que es coneixen. Les interfícies de la pròpia màquina que no tinguin
especificat un nom per a la seva xarxa s'entén com que és la per defecte (0.0.0.0).

Exemple:

	root@seax:~# cat /etc/networks
	default		0.0.0.0
	loopback	127.0.0.0

D'altra banda, es pot demanar al/s servidor/s DNS que ofereix el DHCP o bé, va ser configurat de
manera estàtica per l'administrador de la xarxa, i que donada una ip, es pot saber quin nom té 
l'equip i la xarxa si es que en tenen de configurats.

Per exemple, en aquest cas nomès es mostra el registre PTR:

	En el primer exemple es mostrarà el nom de la xarxa:

	root@seax:~# dig @10.0.5.3 -x 147.83.201.96 +short
	clients-xsf-96.upc.es.
	root@seax:~#

	En aquest cas es mostra el nom d'un equip:
	
	root@seax:~# dig @10.0.5.3 -x 147.83.45.72 +short
	bibvg-portatil02.upc.es.
	root@seax:~#

	Pregunta quin nom té la següent xarxa:

	root@seax:~# dig @10.0.5.3 -x 127.0.0.0 +short
	localhost.
	root@seax:~#


# RECONEIXER INTERFÍCIE WIFI
----------------------------

Quan es connecta el "dongle" usb de la targeta wifi a la màquina host aquest s'ha d'alliberar
d'aquesta i passar-li el control a la màquina virtual, fent un pont entre màquines host i guest.

Per fer-ho s'ha d'anar a paràmetres de la màquina virtual i en configuracions USB primer posar
Controlador USB 2.0 (EHCI) per a evitar problemes de incompatibilitat i seguidament clicar sobre
el checkbox de la targeta per a que es passi el control.

És molt útil afegir un filtre en aquest mateix menú per a què s'auto-passi el control cada cop
que s'endolla la targeta USB o s'arrenca la màquina guest.


# INSTAL·LACIÓ DEL DRIVER
-------------------------

Normalment en el procediment de reconeixement de la targeta wifi usb, el propi virtualbox dona
una certa idea de qui és el fabricant, si no es sap, i així poder descàrregar de la web els drivers
necessaris per poder fer-la servir.

En l'escenari que s'ha fet la pràctica ha estat necessari instal·lar dos tipus de drivers diferents;
realtek i ralink.

Per saber quin tipus de driver és necessari i hauría d'haver carregat el sistema operatiu es pot fer:

	root@seax:~# lsusb
	Bus 001 Device 005: ID 148f:5370 Ralink Technology, Corp. RT5370 Wireless Adapter
	.
	.
	.
	root@seax:~# 

Amb aquesta comanda es pot veure que a priori està fent servir el driver RT5370.

En aquesta altre està fent servir el driver RTL8188EUS.

	root@seax:~# lsusb
	Bus 001 Device 006: ID 0bda:8179 Realtek Semiconductor Corp. RTL8188EUS 802.11n Wireless Network Adapter
	.
	.
	.
	root@seax:~#

En el cas de la realtek ha estat necessari descarrgar el driver rtl8188eufw.bin i ficar-lo en el path
/lib/firmware/rtlwifi/.

En el cas de la ralink ha estat necessari modificar els sources list (/etc/apt/sources.list) i afegir
una nova linea; deb http://ftp.es.debian.org/debian/ stretch main contrib non-free

Desprès s'han instal·lat els drivers amb la comanda:

	# apt-get install firmware-ralink

I ha descarregat el firmware en /lib/firmware/ com es mostra:

	root@seax:~# ls /lib/firmware/ | grep "rt"
	rt2561.bin
	rt2561s.bin
	rt2661.bin
	rt2860.bin
	rt2870.bin
	rt3070.bin
	rt3071.bin
	rt3090.bin
	rt3290.bin
	rt73.bin
	rtlwifi
	root@seax:~#

Per últim, un altre forma de saber exactament el driver que ha carregat el sistema operatiu i on es troba:

	root@seax:~# dmesg | grep firmware
	[  878.942000] r8188eu 1-1:1.0: firmware: direct-loading firmware rtlwifi/rtl8188eufw.bin
	.
	.
	.
	root@seax:~#

Com es mostra en la següent captura, el firmware de la ralink no és el 5370 sino, s'està fent servir el
firmware rt2870.bin. El primer valor correspon al manufacturer.

	root@seax:~# dmesg | grep firmware
	.
	.
	.
	[ 5489.262530] rt2800usb 1-1:1.0: firmware: direct-loading firmware rt2870.bin
	[ 5489.262532] ieee80211 phy2: rt2x00lib_request_firmware: Info - Firmware detected - version: 0.36
	root@seax:~# 


# CONFIGURACIÓ D'INTERFÍCIES WIFI
---------------------------------

Aquest tipus de dispositius es tracten del mateix mode que qualsevol altre targeta física, nomès
s'ha de configurar amb els paràmetres pertinents. En aquest cas són afegir el nom de la xarxa i
la clau com a mínim, es pot entrar més en detall i indicar-hi si la xarxa és oculta, quin tipus
de xifrat té, etc.

Aquestes s'han de gestionar en el /etc/networks/interfaces.

Exemple:

	auto wlx0857000f10a2
	iface wlx0857000f10a2 inet dhcp
		wpa-ssid pavo
		#psk="itielico321"
		wpa-psk 58e5a0f588320a37aefd935676fdb925aaf215be2d807c90d08a99fa8d1377a8

On la clau és un resum hash junt amb el nom de la xarxa (SSID) que es fà amb la comanda:
	
	$ wpa_passphrase 

Exemple:

	root@seax:~# wpa_passphrase pavo pavapava
	network={
		ssid="pavo"
		#psk="pavapava"
		psk=58e5a0f588320a37aefd935676fdb925aaf215be2d807c90d08a99fa8d1377a8
	}
	root@seax:~#

Una altre manera de configurar-la es mitjançant el paquet wpa_supplicant que previament s'ha d'instal·lar.

Un exemple de configuració:

	auto wlx0857000f10a2
	iface wlx0857000f10a2 inet dhcp
		wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

Fitxer wpa_supplicant.conf:

	root@seax:~# cat /etc/wpa_supplicant/wpa_supplicant.conf
	ctrl_interface=/var/run/wpa_supplicant

	network={
		    ssid="pavo"
		    psk=58e5a0f588320a37aefd935676fdb925aaf215be2d807c90d08a99fa8d1377a8
	}
	root@seax:~#


Un cop configurada l'interfície i a més estigui propera a la xarxa sense fils, es pot aixecar per a què
obtingui paràmetres per dhcp i es vinculi amb la xarxa:

	# ifup wlx0857000f10a2


Per asegurar la vinculació amb la xarxa es pot fer de dues maneres, la primera amb una comanda 
obsoleta i sense guaranties a partir de Debian 10 i l'altre amb l'eina actualitzada.

Primera forma:

	$ iwconfig [interfície]

Exemple:

	root@seax:~# iwconfig wlx0857000f10a2 
	wlx0857000f10a2  IEEE 802.11bgn  ESSID:"pavo"  Nickname:"<WIFI@REALTEK>"
		      Mode:Managed  Frequency:2.437 GHz  Access Point: C4:0B:CB:45:90:9D   
		      Bit Rate:72.2 Mb/s   Sensitivity:0/0  
		      Retry:off   RTS thr:off   Fragment thr:off
		      Encryption key:****-****-****-****-****-****-****-****   Security mode:open
		      Power Management:off
		      Link Quality=100/100  Signal level=69/100  Noise level=0/100
		      Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
		      Tx excessive retries:0  Invalid misc:0   Missed beacon:0

	root@seax:~#

Segona forma:

	# iw dev wlx0857000f10a2 link

Exemple:

	root@seax:~# iw dev wlx0857000f10a2 link
	Not connected.
	root@seax:~#


També es pot connectar de forma manual amb una xarxa emprant les dues comandes anteriors respectivament.

Primer exemple:
	
	root@seax:~# iwconfig wlx0857000f10a2
	wlx0857000f10a2  unassociated  ESSID:""  Nickname:"<WIFI@REALTEK>"
		      Mode:Managed  Frequency=2.437 GHz  Access Point: Not-Associated   
		      Sensitivity:0/0  
		      Retry:off   RTS thr:off   Fragment thr:off
		      Encryption key:off
		      Power Management:off
		      Link Quality:0  Signal level:0  Noise level:0
		      Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
		      Tx excessive retries:0  Invalid misc:0   Missed beacon:0

	root@seax:~# iwconfig wlx0857000f10a2 essid "pavo" key s:pavapava
	root@seax:~# iwconfig wlx0857000f10a2
	wlx0857000f10a2  IEEE 802.11bgn  ESSID:"pavo"  Nickname:"<WIFI@REALTEK>"
		      Mode:Managed  Frequency:2.437 GHz  Access Point: C4:0B:CB:45:90:9D   
		      Bit Rate:72.2 Mb/s   Sensitivity:0/0  
		      Retry:off   RTS thr:off   Fragment thr:off
		      Encryption key:****-****-****-****-****-****-****-****   Security mode:open
		      Power Management:off
		      Link Quality=95/100  Signal level=76/100  Noise level=0/100
		      Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
		      Tx excessive retries:0  Invalid misc:0   Missed beacon:0

	root@seax:~#


Segon exemple vàlid per xifrats WEP (en aquest escenari no s'ha fet servir):
	# iw wlan0 connect -w Cisco key 0:1234567890

Tercer exemple WPA/WPA2:

	root@seax:~# wpa_passphrase .:RouteR:. >> /etc/wpa_supplicant.conf
	my_pass_phrase
	root@seax:~# cat /etc/wpa_supplicant.conf 
	# reading passphrase from stdin
	network={
		ssid=".:RouteR:."
		#psk="my_pass_phrase"
		psk=f8ad37101b7cbe2bfb166d963954aa87e04a2f7f3e593cf97f16ba4dae1ed54e
	}

	root@seax:~# wpa_supplicant -B -D wext -i wlx00117f494b67 -c /etc/wpa_supplicant.conf
	Successfully initialized wpa_supplicant
	ioctl[SIOCSIWENCODEEXT]: Invalid argument
	ioctl[SIOCSIWENCODEEXT]: Invalid argument


Es comprova si s'ha associat correctament:

	root@seax:~# iw wlx00117f494b67 link
	Connected to 80:3f:5d:b3:b2:67 (on wlx00117f494b67)
		SSID: .:RouteR:.
		freq: 2462
		RX: 13733 bytes (107 packets)
		TX: 1151 bytes (12 packets)
		signal: -21 dBm
		tx bitrate: 1.0 MBit/s

		bss flags:	short-slot-time
		dtim period:	1
		beacon int:	100
	root@seax:~#

Es demana una ip al punt d'accès:

	root@seax:~# dhclient wlx00117f494b67
	root@seax:~#

Es mostra quins paràmetres ha donat a l'interfície:

	root@seax:~# ip addr show wlx00117f494b67 
	6: wlx00117f494b67: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
		link/ether 00:11:7f:49:4b:67 brd ff:ff:ff:ff:ff:ff
		inet 192.168.1.251/24 brd 192.168.1.255 scope global wlx00117f494b67
		   valid_lft forever preferred_lft forever
		inet6 fe80::211:7fff:fe49:4b67/64 scope link 
		   valid_lft forever preferred_lft forever
	root@seax:~#

Es mostra l'associació:

	root@seax:~# iwconfig wlx00117f494b67 
	wlx00117f494b67  IEEE 802.11  ESSID:".:RouteR:."  
		      Mode:Managed  Frequency:2.462 GHz  Access Point: 80:3F:5D:B3:B2:67   
		      Bit Rate=1 Mb/s   Tx-Power=20 dBm   
		      Retry short limit:7   RTS thr:off   Fragment thr:off
		      Encryption key:off
		      Power Management:off
		      Link Quality=70/70  Signal level=-21 dBm  
		      Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
		      Tx excessive retries:0  Invalid misc:12   Missed beacon:0

	root@seax:~#


# ESCANEIG XARXES SENSE FILS
----------------------------

Continuant amb les dues formes bàsiques de treballar, la comanda obsoleta (iwlist) i la actualitzada (iw)
es pot fer un escaneig de les diferents xarxes sense fils que es troben a l'abast.

Per exemple:

	root@seax:~# iwlist wlx0857000f10a2 scan
	wlx0857000f10a2  Scan completed :
	.
	.
	.

	Cell 04 - Address: C4:0B:CB:45:90:9D
                    ESSID:"pavo"
                    Protocol:IEEE 802.11bgn
                    Mode:Master
                    Frequency:2.437 GHz (Channel 6)
                    Encryption key:on
                    Bit Rates:108 Mb/s
                    Extra:rsn_ie=30140100000fac040100000fac040100000fac020c00
                    IE: IEEE 802.11i/WPA2 Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
                    Quality=0/100  Signal level=70/100
	.
	.
	.
	root@seax:~#


Escanejat de les xarxes amb iw: 

	root@seax:~# iw wlx00117f494b67 scan
	.
	.
	.
	BSS c4:0b:cb:45:90:9d(on wlx00117f494b67)
		TSF: 3344892584 usec (0d, 00:55:44)
		freq: 2437
		beacon interval: 100 TUs
		capability: ESS Privacy ShortPreamble ShortSlotTime (0x0431)
		signal: -27.00 dBm
		last seen: 6436 ms ago
		Information elements from Probe Response frame:
		SSID: pavo
		Supported rates: 1.0* 2.0* 5.5* 11.0* 
		DS Parameter set: channel 6
		ERP: <no flags>
		Extended supported rates: 6.0 9.0 12.0 18.0 24.0 36.0 48.0 54.0 
		RSN:	 * Version: 1
			 * Group cipher: CCMP
			 * Pairwise ciphers: CCMP
			 * Authentication suites: PSK
			 * Capabilities: 16-PTKSA-RC 1-GTKSA-RC (0x000c)
		HT capabilities:
			Capabilities: 0x12c
				HT20
				SM Power Save disabled
				RX HT20 SGI
				RX STBC 1-stream
				Max AMSDU length: 3839 bytes
				No DSSS/CCK HT40
			Maximum RX AMPDU length 65535 bytes (exponent: 0x003)
			Minimum RX AMPDU time spacing: No restriction (0x00)
			HT RX MCS rate indexes supported: 0-7
			HT TX MCS rate indexes are undefined
		HT operation:
			 * primary channel: 6
			 * secondary channel offset: no secondary
			 * STA channel width: 20 MHz
			 * RIFS: 0
			 * HT protection: nonmember
			 * non-GF present: 0
			 * OBSS non-GF present: 0
			 * dual beacon: 0
			 * dual CTS protection: 0
			 * STBC beacon: 0
			 * L-SIG TXOP Prot: 0
			 * PCO active: 0
			 * PCO phase: 0
		WMM:	 * Parameter version 1
			 * u-APSD
			 * BE: CW 15-1023, AIFSN 3
			 * BK: CW 15-1023, AIFSN 7
			 * VI: CW 7-15, AIFSN 2, TXOP 3008 usec
			 * VO: CW 3-7, AIFSN 2, TXOP 1504 usec
		.
		.
		.
		root@seax:~#

Per fer un script i fer servir nomès les interfícies sense fils és molt útil saber si per
cada una conectada al sistema que es troben a /sys/class/net/<interfície> té la carpeta
wireless.

Exemple:

	root@seax:~# ls /sys/class/net/
	enp0s8	enp0s9	itiel0	lo  wlx00117f494b67
	root@seax:~# ls /sys/class/net/itiel0/wireless
	ls: no s’ha pogut accedir a '/sys/class/net/itiel0/wireless': El fitxer o directori no existeix
	root@seax:~# ls /sys/class/net/wlx00117f494b67/wireless
	root@seax:~#

En aquest cas es sap que itiel0 és una interfície física (ethernet) i que wlx00117f494b67 és wifi.


# PROGRAMAR UN SHELL SCRIPT
---------------------------

Amb qualsevol editor de textos es pot programar un script shell, s'ha d'indicar quin tipus
d'interpret ho executarà i respectar la sintaxis que cascacún d'aquests els hi conformen les 
instruccions per poder realitzar un algoritme.

És molt important procurar no cometre errors amb fitxers crítics del sistema, és convenient
fer un backup. Si el fitxer és d'internet, és a dir, d'una font no confiable, s'hauría de
procurar d'interpretar què és el que fa l'script i a quin nivell de sistema està fent
consultes i modificacions.

Per poder executar correctament l'script, és molt apropiat tenir els paquets amb les versions
en que es va realitzar aquest per evitar problemes amb incompatibilitats. Si n'és
l'administrador, creador del shell script, de tant en tant s'hauría de provar amb els paquets
actualitzats.
